{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-hot-toast\";\nconst initialState = {\n  cart: localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [],\n  total: localStorage.getItem(\"total\") ? JSON.parse(localStorage.getItem(\"total\")) : 0,\n  totalItems: localStorage.getItem(\"totalItems\") ? JSON.parse(localStorage.getItem(\"totalItems\")) : 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const course = action.payload;\n      const index = state.cart.findIndex(item => item._id === course._id);\n      if (index >= 0) {\n        // If the course is already in the cart, do not modify the quantity\n        toast.error(\"Course already in cart\");\n        return;\n      }\n      // If the course is not in the cart, add it to the cart\n      state.cart.push(course);\n      // Update the total quantity and price\n      state.totalItems++;\n      state.total += course.price;\n      // Update to localstorage\n      localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n      localStorage.setItem(\"total\", JSON.stringify(state.total));\n      localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems));\n      // show toast\n      toast.success(\"Course added to cart\");\n    },\n    removeFromCart: (state, action) => {\n      const course = action.payload;\n      const index = state.cart.findIndex(item => item._id === course._id);\n      if (index >= 0) {\n        state.totalItems--;\n        state.total -= state.cart[index].price;\n        state.cart.splice(index, 1);\n        // Update to localstorage\n        localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n        localStorage.setItem(\"total\", JSON.stringify(state.total));\n        localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems));\n        // show toast\n        toast.success(\"Course removed from cart\");\n      }\n    },\n    resetCart: state => {\n      state.cart = [];\n      state.total = 0;\n      state.totalItems = 0;\n      // Update to localstorage\n      localStorage.removeItem(\"cart\");\n      localStorage.removeItem(\"total\");\n      localStorage.removeItem(\"totalItems\");\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  resetCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cart","localStorage","getItem","JSON","parse","total","totalItems","cartSlice","name","reducers","addToCart","state","action","course","payload","index","findIndex","item","_id","error","push","price","setItem","stringify","success","removeFromCart","splice","resetCart","removeItem","actions","reducer"],"sources":["C:/Users/R/Desktop/MAJOR PROJECT/robinacedamy/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { toast } from \"react-hot-toast\"\r\n\r\nconst initialState = {\r\n    cart: localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : [],\r\n    total: localStorage.getItem(\"total\")\r\n      ? JSON.parse(localStorage.getItem(\"total\"))\r\n      : 0,\r\n    totalItems: localStorage.getItem(\"totalItems\")\r\n      ? JSON.parse(localStorage.getItem(\"totalItems\"))\r\n      : 0,\r\n  }\r\n\r\n  const cartSlice=createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n    reducers: {\r\n        addToCart:(state,action)=>{\r\n            const course = action.payload\r\n            const index = state.cart.findIndex((item) => item._id === course._id)\r\n\r\n            if (index >= 0) {\r\n                // If the course is already in the cart, do not modify the quantity\r\n                toast.error(\"Course already in cart\")\r\n                return\r\n            }\r\n            // If the course is not in the cart, add it to the cart\r\n            state.cart.push(course)\r\n            // Update the total quantity and price\r\n            state.totalItems++\r\n            state.total += course.price\r\n            // Update to localstorage\r\n            localStorage.setItem(\"cart\", JSON.stringify(state.cart))\r\n            localStorage.setItem(\"total\", JSON.stringify(state.total))\r\n            localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\r\n            // show toast\r\n            toast.success(\"Course added to cart\")\r\n        },\r\n        removeFromCart:(state,action)=>{\r\n            const course = action.payload\r\n            const index = state.cart.findIndex((item) => item._id === course._id)\r\n            if(index>=0){\r\n                state.totalItems--\r\n                state.total -= state.cart[index].price\r\n                state.cart.splice(index, 1)\r\n                // Update to localstorage\r\n                localStorage.setItem(\"cart\", JSON.stringify(state.cart))\r\n                localStorage.setItem(\"total\", JSON.stringify(state.total))\r\n                localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\r\n                // show toast\r\n                toast.success(\"Course removed from cart\")\r\n            }\r\n        },\r\n        resetCart: (state) => {\r\n            state.cart = []\r\n            state.total = 0\r\n            state.totalItems = 0\r\n            // Update to localstorage\r\n            localStorage.removeItem(\"cart\")\r\n            localStorage.removeItem(\"total\")\r\n            localStorage.removeItem(\"totalItems\")\r\n          },\r\n    \r\n    }\r\n  })\r\n  export const { addToCart, removeFromCart, resetCart } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}